{"ast":null,"code":"import bases from './util/bases.js';\nexport function toString(array) {\n  let encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';\n  const base = bases[encoding];\n\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`);\n  }\n\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n\n  return base.encoder.encode(array).substring(1);\n}","map":{"version":3,"sources":["/Users/darmenqyzy/Documents/GitHub/nft_stars/final3/node_modules/uint8arrays/esm/src/to-string.js"],"names":["bases","toString","array","encoding","base","Error","globalThis","Buffer","from","buffer","byteOffset","byteLength","encoder","encode","substring"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAA4C;AAAA,MAAnBC,QAAmB,uEAAR,MAAQ;AACjD,QAAMC,IAAI,GAAGJ,KAAK,CAACG,QAAD,CAAlB;;AACA,MAAI,CAACC,IAAL,EAAW;AACT,UAAM,IAAIC,KAAJ,CAAW,yBAAyBF,QAAU,GAA9C,CAAN;AACD;;AACD,MAAI,CAACA,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,OAArC,KAAiDG,UAAU,CAACC,MAAX,IAAqB,IAAtE,IAA8ED,UAAU,CAACC,MAAX,CAAkBC,IAAlB,IAA0B,IAA5G,EAAkH;AAChH,WAAOF,UAAU,CAACC,MAAX,CAAkBC,IAAlB,CAAuBN,KAAK,CAACO,MAA7B,EAAqCP,KAAK,CAACQ,UAA3C,EAAuDR,KAAK,CAACS,UAA7D,EAAyEV,QAAzE,CAAkF,MAAlF,CAAP;AACD;;AACD,SAAOG,IAAI,CAACQ,OAAL,CAAaC,MAAb,CAAoBX,KAApB,EAA2BY,SAA3B,CAAqC,CAArC,CAAP;AACD","sourcesContent":["import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}"]},"metadata":{},"sourceType":"module"}